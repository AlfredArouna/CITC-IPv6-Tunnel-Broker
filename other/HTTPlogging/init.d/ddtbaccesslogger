#! /bin/sh
### BEGIN INIT INFO
# Provides:          ddtbaccesslogger
# Required-Start:    $network
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start access logger for ddtb, a TSP tunnel broker
### END INIT INFO

 # Copyright (C) CITC, Communications and Information Technology Commission,
 # Kingdom of Saudi Arabia.
 #
 # Developed by CITC Tunnel Broker team, tunnelbroker@citc.gov.sa.
 #
 # This software is released to public domain under GNU General Public License
 # version 2, June 1991 or any later. Please see file 'LICENSE' in source code
 # repository root.

# Ubuntu: add this using "update-rc.d ddtbaccesslogger defaults"

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin
DDTB_DIR=/usr/local/sbin
NAME=ddtbaccesslogger
DAEMON=$DDTB_DIR/$NAME
DESC="RFC 5572 compliant TSP tunnel broker access logger"
PIDFILE=/var/run/ddtb/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

test -x $DDTB_DIR/$NAME || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions


do_start()
{
 if [ -f $PIDFILE ]; then {
   log_daemon_msg "$DAEMON is already running with PID `cat $PIDFILE`"
   log_daemon_msg "PID file $PIDFILE exists - exiting."
   exit 1
 }
 fi
 
 start-stop-daemon --start --make-pidfile --pidfile $PIDFILE --exec $DAEMON --background 2>&1 > /dev/null

 # Add code here, if necessary, that waits for the process to be ready
 # to handle requests from services started subsequently which depend
 # on this one.  As a last resort, sleep for some time.
}

do_stop()
{
 #start-stop-daemon --stop --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
 start-stop-daemon --stop --retry=TERM/30/KILL/5 --pidfile $PIDFILE 
 rm -f $PIDFILE
 killall tshark
 rm /tmp/wiresh*
}

case "$1" in

 start)
 [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
 do_start
 case "$?" in
  0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
  2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
 esac
 ;;

 stop)
 [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
 do_stop
 case "$?" in
  0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
  2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
 esac
 ;;

 status)
 if [ -f $PIDFILE ]; then {
   RETVAL=0
   log_daemon_msg "ddtbaccesslogger is running.."
 } else {
   RETVAL=1
   log_daemon_msg "ddtbaccesslogger is NOT running.."
 }
 fi
 return $RETVAL
 ;;

 *)
 echo "Usage: $SCRIPTNAME {start|stop|status}" >&2
 exit 3
 ;;

esac
